const o=`{% block heptacom_admin_open_auth_client_edit_page %} <sw-page :showSearchBar="false" class="heptacom-admin-open-auth-client-edit-page" > {% block heptacom_admin_open_auth_client_edit_page_inner %} {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_smart_bar_header %} <template #smart-bar-header> {{ dynamicName }} </template> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_search_bar_actions %} <template #smart-bar-actions> {% block heptacom_admin_open_auth_client_edit_page_search_bar_actions_help %} <mt-button variant="secondary" :disabled="isLoading" :isLoading="isLoading" :link="item ? $t('heptacomAdminOpenAuthClient.providers.' + item.provider + '.helpUrl') : ''" > <template #iconFront> <mt-icon name="regular-external-link" size="16px" ></mt-icon> </template> {{ $t('heptacom-admin-open-auth-client.pages.edit.actions.help') }} </mt-button> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_search_bar_actions_delete %} <mt-button v-if="acl.can('heptacom_admin_open_auth_client.deleter')" :disabled="isLoading" @click="showDeleteModal = true" variant="critical" > {{ $t('heptacom-admin-open-auth-client.pages.edit.actions.delete') }} </mt-button> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_search_bar_actions_cancel %} <mt-button :disabled="isLoading" variant="secondary" @click="cancelEdit" > {{ $t('heptacom-admin-open-auth-client.pages.edit.actions.cancel') }} </mt-button> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_search_bar_actions_save %} <sw-button-process :disabled="isLoading" :isLoading="isLoading" @click.prevent="saveItem" v-model:value="isSaveSuccessful" variant="primary" > {{ $t('heptacom-admin-open-auth-client.pages.edit.actions.save') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content %} <template #content> <sw-card-view> {% block heptacom_admin_open_auth_client_edit_page_content_base_settings %} <mt-card :isLoading="isLoading" position-identifier="heptacom-admin-open-auth-client-edit-page-base-settings" > <template v-if="item"> {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_name %} <mt-text-field :label="$t('heptacom-admin-open-auth-client.pages.edit.fields.name')" v-model="item.name" ></mt-text-field> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_active %} <mt-switch :label="$t('heptacom-admin-open-auth-client.pages.edit.fields.active')" v-model="item.active" ></mt-switch> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_can_login %} <mt-switch :disabled="!item.active" :label="$t('heptacom-admin-open-auth-client.pages.edit.fields.login')" v-model="item.login" ></mt-switch> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_can_connect %} <mt-switch :disabled="!item.active" :label="$t('heptacom-admin-open-auth-client.pages.edit.fields.connect')" v-model="item.connect" ></mt-switch> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_store_user_token %} <mt-switch :disabled="!item.active" :label="$t('heptacom-admin-open-auth-client.pages.edit.fields.storeUserToken')" v-model="item.storeUserToken" ></mt-switch> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_keep_user_updated %} <mt-switch :disabled="!item.active" :label="$t('heptacom-admin-open-auth-client.pages.edit.fields.keepUserUpdated')" :helpText="$t('heptacom-admin-open-auth-client.pages.edit.fields.keepUserUpdatedHelpText')" v-model="item.keepUserUpdated" ></mt-switch> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_redirect_uri %} <mt-text-field v-if="redirectUri" copyable copyableTooltip :label="$t('heptacom-admin-open-auth-client.pages.edit.fields.redirectUri')" v-model="redirectUri" disabled ></mt-text-field> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_metadata_uri %} <mt-text-field v-if="metadataUri" :copyable="true" :copyableTooltip="true" :label="$t('heptacom-admin-open-auth-client.pages.edit.fields.metadataUri')" :value="metadataUri" disabled ></mt-text-field> <mt-button v-if="metadataUri" class="sw-button__metadata-download" :disabled="!metadataUri" :link="metadataUri" size="small" block variant="secondary" > {{ $t('heptacom-admin-open-auth-client.pages.edit.fields.downloadMetadata') }} </mt-button> {% endblock %} {% endblock %} </template> </mt-card> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_actions %} <mt-card :isLoading="isLoading" :title="$t('heptacom-admin-open-auth-client.pages.edit.ruleActions.title')" position-identifier="heptacom-admin-open-auth-client-edit-page-actions" > <template v-if="item && defaultActionTab !== ''"> {% block heptacom_admin_open_auth_client_edit_page_content_actions_inner %} <sw-tabs :default-item="defaultActionTab"> <template #default="{ active }"> <template v-for="action in actions" :key="action.name" > <sw-tabs-item :active-tab="active" :name="action.name" > {{ $t('heptacom-admin-open-auth-client.actions.' + action.name + '.label') }} </sw-tabs-item> </template> </template> <template #content="{ active }"> <heptacom-admin-open-auth-client-rule-container v-if="actions[active] !== undefined" :client="item" :action="actions[active]" @rule-deleted="onRuleDeleted" @conditions-deleted="onConditionsDeleted" ></heptacom-admin-open-auth-client-rule-container> </template> </sw-tabs> {% endblock %} </template> </mt-card> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_provider_settings %} <component v-if="item && item.provider" :is="providerSettingsComponent" v-bind="providerSettingsProps" ></component> {% endblock %} </sw-card-view> {% block heptacom_admin_open_auth_client_edit_page_content_modal_delete %} <sw-modal v-if="showDeleteModal" :title="$t('heptacom-admin-open-auth-client.pages.edit.modals.delete.title')" @modal-close="showDeleteModal = false" variant="small" > {% block heptacom_admin_open_auth_client_edit_page_content_modal_delete_confirm_text %} <p> {{ $t('heptacom-admin-open-auth-client.pages.edit.modals.delete.warning') }} </p> <p> <strong>{{ dynamicName }}</strong> </p> <p> {{ $t('heptacom-admin-open-auth-client.pages.edit.modals.delete.explanation') }} </p> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_modal_delete_footer %} <template #modal-footer> {% block heptacom_admin_open_auth_client_edit_page_content_modal_delete_abort %} <mt-button size="small" @click="showDeleteModal = false" variant="secondary" > {{ $t('heptacom-admin-open-auth-client.pages.edit.modals.delete.cancel') }} </mt-button> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_modal_delete_delete %} <mt-button size="small" variant="critical" @click="onConfirmDelete" > {{ $t('heptacom-admin-open-auth-client.pages.edit.modals.delete.confirm') }} </mt-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </template> {% endblock %} </sw-page> {% endblock %}`,{Context:i,Mixin:a,Data:c}=Shopware,{Criteria:n}=c,l={template:o,inject:["acl","repositoryFactory","HeptacomAdminOpenAuthProviderApiService","HeptacomAdminOpenAuthRuleActionsApiService"],mixins:[a.getByName("placeholder"),a.getByName("notification")],props:{clientId:{required:!0,type:String}},data(){return{isLoading:!0,isSaveSuccessful:!1,item:null,showDeleteModal:!1,redirectUri:null,metadataUri:null,actions:{},defaultActionTab:"",deletedRuleIds:[],deletedConditionIds:[]}},created(){this.loadData()},computed:{dynamicName(){return this.placeholder(this.item,"name",this.$t("heptacom-admin-open-auth-client.pages.edit.title"))},clientRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_client")},ruleRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_client_rule")},ruleConditionRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_client_rule_condition")},clientCriteria(){const e=new n;return e.getAssociation("rules").addSorting(n.sort("position","ASC")),e.addAssociation("rules.conditions"),e},providerSlug(){return(this.item&&this.item.provider?this.item.provider:"").replace(/_/g,"-")},providerSettingsComponent(){return`heptacom-admin-open-auth-provider-${this.providerSlug}-settings`},providerSettingsProps(){return{item:this.item}}},methods:{loadData(){this.isLoading=!0,Promise.all([this.loadClient(),this.loadActions()]).finally(()=>{this.isLoading=!1})},async loadClient(){this.item=null,this.item=await this.clientRepository.get(this.clientId,i.api,this.clientCriteria),this.redirectUri=(await this.HeptacomAdminOpenAuthProviderApiService.getRedirectUri(this.item.id)).target,this.metadataUri=(await this.HeptacomAdminOpenAuthProviderApiService.getMetadataUri(this.item.id)).target},async loadActions(){this.actions={};const e=await this.HeptacomAdminOpenAuthRuleActionsApiService.list();for(const t of e)this.actions[t.name]=t;e.length>0&&(this.defaultActionTab=e[0].name)},cancelEdit(){this.$router.push({name:this.$route.meta.parentPath})},saveItem(){this.isLoading=!0,this.saveClient().then(this.syncDeletedConditions).then(this.syncDeletedRules).then(()=>(this.isSaveSuccessful=!0,this.loadData())).catch(e=>{const t=this.client.name;throw this.createNotificationError({title:this.$tc("global.notification.notificationSaveErrorTitle"),message:this.$tc("global.notification.notificationSaveErrorMessage",0,{entityName:t})}),e}).finally(()=>{this.isLoading=!1})},saveClient(){return this.clientRepository.save(this.item,i.api)},syncDeletedRules(){if(this.deletedRuleIds.length>0)return this.ruleRepository.syncDeleted(this.deletedRuleIds,i.api).then(()=>{this.deletedRuleIds=[]})},syncDeletedConditions(){if(this.deletedConditionIds.length>0)return this.ruleConditionRepository.syncDeleted(this.deletedConditionIds,i.api).then(()=>{this.deletedConditionIds=[]})},onRuleDeleted(e){this.deletedRuleIds.push(e)},onConditionsDeleted(e){this.deletedConditionIds=[...this.deletedConditionIds,...e]},onConfirmDelete(){return this.showDeleteModal=!1,this.isLoading=!0,this.clientRepository.delete(this.item.id,i.api).then(()=>{this.$router.push({name:"heptacom.admin.open.auth.client.settings"})}).catch(e=>{const t=this.client.name;throw this.createNotificationError({title:this.$tc("global.notification.notificationSaveErrorTitle"),message:this.$tc("global.notification.notificationSaveErrorMessage",0,{entityName:t})}),e}).finally(()=>{this.isLoading=!1})}}};export{l as default};
//# sourceMappingURL=index-8PBwT0Nr.js.map
