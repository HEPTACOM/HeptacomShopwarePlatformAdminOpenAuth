const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CsOpz98K.js","assets/index-JXgo4jQC.css","assets/index-B79O-bFK.js","assets/index-BZcgFUjJ.css","assets/index-C6Y6jNDk.js","assets/index-sWcLi9DA.css","assets/index-8PBwT0Nr.js","assets/index-HvMT3PYt.css","assets/index-De8O79--.js","assets/index-KG_svmrU.css","assets/index-Dg6yaIJ9.js","assets/index-CthATxMJ.css","assets/index-BbuLKrJn.js","assets/index-DsJrw3Om.css"])))=>i.map(i=>d[i]);
const C="modulepreload",P=function(t){return window.__sw__.assetPath+"/bundles/kskheptacomadminopenauth/administration/"+t},A={},n=function(e,i,o){let s=Promise.resolve();if(i&&i.length>0){document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),p=(a==null?void 0:a.nonce)||(a==null?void 0:a.getAttribute("nonce"));s=Promise.allSettled(i.map(d=>{if(d=P(d),d in A)return;A[d]=!0;const u=d.endsWith(".css"),b=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${d}"]${b}`))return;const c=document.createElement("link");if(c.rel=u?"stylesheet":C,u||(c.as="script"),c.crossOrigin="",c.href=d,p&&c.setAttribute("nonce",p),document.head.appendChild(c),u)return new Promise((O,y)=>{c.addEventListener("load",O),c.addEventListener("error",()=>y(new Error(`Unable to preload CSS for ${d}`)))})}))}function m(a){const p=new Event("vite:preloadError",{cancelable:!0});if(p.payload=a,window.dispatchEvent(p),!p.defaultPrevented)throw a}return s.then(a=>{for(const p of a||[])p.status==="rejected"&&m(p.reason);return e().catch(m)})},{Component:w}=Shopware;w.extend("heptacom-admin-open-auth-url-field","sw-url-field",()=>n(()=>import("./index-Cg1fud1D.js"),[]));w.register("heptacom-admin-open-auth-user-confirm-login",()=>n(()=>import("./index-CsOpz98K.js"),__vite__mapDeps([0,1])));const E=`{% block sw_profile_index_general_password %} <template v-if="!denyPasswordLogin"> {% parent %} </template> {% block sw_profile_index_admin_open_auth %} <mt-card position-identifier="heptacom-admin-open-auth-user-profile-sso" :title="$tc('sw-profile-index.titleHeptacomAdminOpenAuthCard')" :isLoading="isUserLoading || !languageId" > {% block sw_profile_index_admin_open_auth_clients %} <template> {% block sw_profile_index_admin_open_auth_clients_cards %} <sw-container rows="1fr"> <template v-for="client of heptacomAdminOpenAuthClients" :key="client.id" > <sw-card-section :slim="true" divider="bottom" > {% block sw_profile_index_admin_open_auth_clients_cards_item %} <sw-container columns="1fr auto"> {% block sw_profile_index_admin_open_auth_clients_cards_item_provider %} <div> {{ client.name }} </div> {% endblock %} {% block sw_profile_index_admin_open_auth_clients_cards_item_action %} <mt-button v-if="client.connected" @click="revokeHeptacomAdminOpenAuthUserKey(client.id)" icon="regular-minus" > {# TODO move icon #} {{ $t('sw-profile-index.heptacomAdminOpenAuth.userKeys.actions.revoke') }} </mt-button> <mt-button v-else-if="!client.connected" @click="redirectToLoginMask(client.id)" icon="regular-plus" variant="secondary" > {# TODO move icon #} {{ $t('sw-profile-index.heptacomAdminOpenAuth.userKeys.actions.connect') }} </mt-button> {% endblock %} </sw-container> {% endblock %} </sw-card-section> </template> </sw-container> {% endblock %} </template> {% endblock %} </mt-card> {% endblock %} {% endblock %}`,{Component:k,Context:_}=Shopware;k.override("sw-profile-index-general",{template:E,inject:["repositoryFactory","systemConfigApiService"],data(){return{denyPasswordLogin:!1,heptacomAdminOpenAuthLoading:!0,heptacomAdminOpenAuthClients:[]}},computed:{heptacomAdminOpenAuthClientsRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_client")},heptacomAdminOpenAuthHttpClient(){return this.heptacomAdminOpenAuthClientsRepository.httpClient}},watch:{isUserLoading:{handler(){this.loadHeptacomAdminOpenAuth().then()}},languages:{handler(){this.loadHeptacomAdminOpenAuth().then()}}},created(){this.systemConfigApiService.getValues("KskHeptacomAdminOpenAuth.config").then(t=>{this.denyPasswordLogin=t["KskHeptacomAdminOpenAuth.config.denyPasswordLogin"]})},methods:{async loadHeptacomAdminOpenAuth(){if(this.isUserLoading||!this.languages)return;this.heptacomAdminOpenAuthLoading=!0,this.heptacomAdminOpenAuthClients=[];const t=this.heptacomAdminOpenAuthClientsRepository.buildHeaders(_.api),e=await this.heptacomAdminOpenAuthHttpClient.get("/_admin/open-auth/client/list",{headers:t});this.heptacomAdminOpenAuthClients=e.data.data,this.heptacomAdminOpenAuthLoading=!1},async redirectToLoginMask(t){const e=window.location.pathname+window.location.search+window.location.hash,i=this.heptacomAdminOpenAuthClientsRepository.buildHeaders(_.api),o=await this.heptacomAdminOpenAuthHttpClient.post(`/_action/open-auth/${t}/connect?redirectTo=${encodeURIComponent(e)}`,{},{headers:i});window.location.href=o.data.target},async revokeHeptacomAdminOpenAuthUserKey(t){const e=this.heptacomAdminOpenAuthClientsRepository.buildHeaders(_.api);await this.heptacomAdminOpenAuthHttpClient.post(`/_action/open-auth/${t}/disconnect`,{},{headers:e}),await this.loadHeptacomAdminOpenAuth()}}});const T='{% block sw_settings_user_detail_content_confirm_password_modal_input__confirm_password %} <heptacom-admin-open-auth-user-confirm-login :divider="!denyPasswordLogin" ref="heptacomAdminOpenAuthUserConfirmLogin" @confirm="heptacomAdminOpenAuthUserConfirm" ></heptacom-admin-open-auth-user-confirm-login> <template v-if="!denyPasswordLogin"> {% parent %} </template> {% endblock %} {% block sw_settings_user_detail_content_confirm_password_modal_actions_change %} <template v-if="!denyPasswordLogin"> {% parent %} </template> {% endblock %}',{Component:R}=Shopware;R.override("sw-verify-user-modal",{template:T,inject:["systemConfigApiService"],data(){return{denyPasswordLogin:!1}},created(){this.systemConfigApiService.getValues("KskHeptacomAdminOpenAuth.config").then(t=>{this.denyPasswordLogin=t["KskHeptacomAdminOpenAuth.config.denyPasswordLogin"]})},methods:{onCloseConfirmPasswordModal(){return this.$refs.heptacomAdminOpenAuthUserConfirmLogin.abortAuthFlow(),this.$super("onCloseConfirmPasswordModal")},heptacomAdminOpenAuthUserConfirm(t){this.$emit("verified",t)}}});Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"settings",key:"heptacom_admin_open_auth_client",roles:{viewer:{privileges:["heptacom_admin_open_auth_client:read","heptacom_admin_open_auth_user_key:read","heptacom_admin_open_auth_client_rule:read","heptacom_admin_open_auth_client_rule_condition:read"],dependencies:[]},editor:{privileges:["heptacom_admin_open_auth_client:update","heptacom_admin_open_auth_client_rule:create","heptacom_admin_open_auth_client_rule:update","heptacom_admin_open_auth_client_rule:delete","heptacom_admin_open_auth_client_rule_condition:create","heptacom_admin_open_auth_client_rule_condition:update","heptacom_admin_open_auth_client_rule_condition:delete"],dependencies:["heptacom_admin_open_auth_client.viewer"]},creator:{privileges:["heptacom_admin_open_auth_client:create"],dependencies:["heptacom_admin_open_auth_client.editor"]},deleter:{privileges:["heptacom_admin_open_auth_client:delete"],dependencies:["heptacom_admin_open_auth_client.viewer"]}}});const{Component:l,Module:L}=Shopware;l.register("heptacom-admin-open-auth-role-assignment-action-config",()=>n(()=>import("./index-5vojZm_3.js"),[]));l.register("heptacom-admin-open-auth-client-rule-container",()=>n(()=>import("./index-Dp6dsyza.js"),[]));l.register("heptacom-admin-open-auth-client-rule-item",()=>n(()=>import("./index-B79O-bFK.js"),__vite__mapDeps([2,3])));l.register("heptacom-admin-open-auth-client-create-page",()=>n(()=>import("./index-C6Y6jNDk.js"),__vite__mapDeps([4,5])));l.register("heptacom-admin-open-auth-client-edit-page",()=>n(()=>import("./index-8PBwT0Nr.js"),__vite__mapDeps([6,7])));l.register("heptacom-admin-open-auth-client-listing-page",()=>n(()=>import("./index-De8O79--.js"),__vite__mapDeps([8,9])));L.register("heptacom-admin-open-auth-client",{type:"plugin",name:"heptacom-admin-open-auth-client.module.name",title:"heptacom-admin-open-auth-client.module.title",description:"heptacom-admin-open-auth-client.module.description",color:"#FFC2A2",icon:"regular-sign-in",routes:{create:{component:"heptacom-admin-open-auth-client-create-page",path:"create",meta:{parentPath:"heptacom.admin.open.auth.client.settings",privilege:"heptacom_admin_open_auth_client.creator"}},edit:{component:"heptacom-admin-open-auth-client-edit-page",path:"edit/:id",meta:{parentPath:"heptacom.admin.open.auth.client.settings",privilege:"heptacom_admin_open_auth_client.editor"},props:{default(t){return{clientId:t.params.id}}}},settings:{component:"heptacom-admin-open-auth-client-listing-page",path:"settings",meta:{parentPath:"sw.settings.index.system",privilege:"heptacom_admin_open_auth_client.viewer"}}},settingsItem:[{to:"heptacom.admin.open.auth.client.settings",group:"system",icon:"regular-sign-in",privilege:"heptacom_admin_open_auth_client.viewer"}]});const S=t=>(t.addCondition("heptacomAdminOpenAuthMicrosoftEntraIdOidcGroups",{component:"sw-condition-generic",label:"heptacomAdminOpenAuthClient.providerFields.microsoft_entra_id_oidc.condition.rule.groupIds",scopes:["microsoft_entra_id_oidc"],group:"user"}),t),$=t=>(t.addCondition("heptacomAdminOpenAuthAuthenticatedRequest",{component:"heptacom-admin-open-auth-condition-authenticated-request",label:"heptacomAdminOpenAuthClient.providerFields.open_id_connect.condition.rule.authenticatedRequest",scopes:["open_id_connect","cidaas","google_cloud","keycloak","microsoft_entra_id_oidc","okta","onelogin"],group:"user"}),t.addCondition("heptacomAdminOpenAuthAuthenticatedODataRequest",{component:"heptacom-admin-open-auth-condition-authenticated-request",label:"heptacomAdminOpenAuthClient.providerFields.open_id_connect.condition.rule.authenticatedODataRequest",scopes:["open_id_connect","cidaas","google_cloud","keycloak","microsoft_entra_id_oidc","okta","onelogin"],group:"user"}),t.addCondition("heptacomAdminOpenAuthIdToken",{component:"heptacom-admin-open-auth-condition-jmes-path",label:"heptacomAdminOpenAuthClient.providerFields.open_id_connect.condition.rule.idToken",scopes:["open_id_connect","cidaas","google_cloud","keycloak","microsoft_azure_oidc","okta","onelogin"],group:"user"}),t),D=t=>(t.addCondition("heptacomAdminOpenAuthSaml2Role",{component:"sw-condition-generic",label:"heptacomAdminOpenAuthClient.providerFields.saml2.condition.rule.roles",scopes:["saml2"],group:"user"}),t),q=`{% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_store_user_token %} <template v-if="!item || item.provider !== 'jumpcloud'"> {% parent %} </template> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner %} {% parent() %} <template v-if="item && item.provider === 'jumpcloud'"> <mt-textarea :disabled="true" :label="$t('heptacomAdminOpenAuthClient.providerFields.saml2.serviceProviderCertificate')" :help-text="$t('heptacomAdminOpenAuthClient.providerFields.saml2.serviceProviderCertificate-help')" v-model="item.config.serviceProviderCertificate" ></mt-textarea> <mt-textarea :disabled="true" :label="$t('heptacomAdminOpenAuthClient.providerFields.saml2.serviceProviderPublicKey')" :help-text="$t('heptacomAdminOpenAuthClient.providerFields.saml2.serviceProviderPublicKey-help')" v-model="item.config.serviceProviderPublicKey" ></mt-textarea> </template> {% endblock %}`,{Component:x}=Shopware;x.override("heptacom-admin-open-auth-client-edit-page",{template:q,data(){return{availableProperties:["firstName","lastName","email","timezone","locale"]}},watch:{item(t){t&&t.provider==="jumpcloud"&&(t.config.attributeMapping||(t.config.attributeMapping={}))}}});const I=`{% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner_store_user_token %} <template v-if="!item || item.provider !== 'saml2'"> {% parent %} </template> {% endblock %} {% block heptacom_admin_open_auth_client_edit_page_content_base_settings_inner %} {% parent() %} <template v-if="item && item.provider === 'saml2'"> <mt-textarea :disabled="true" :label="$t('heptacomAdminOpenAuthClient.providerFields.saml2.serviceProviderCertificate')" :help-text="$t('heptacomAdminOpenAuthClient.providerFields.saml2.serviceProviderCertificate-help')" v-model="item.config.serviceProviderCertificate" ></mt-textarea> <mt-textarea :disabled="true" :label="$t('heptacomAdminOpenAuthClient.providerFields.saml2.serviceProviderPublicKey')" :help-text="$t('heptacomAdminOpenAuthClient.providerFields.saml2.serviceProviderPublicKey-help')" v-model="item.config.serviceProviderPublicKey" ></mt-textarea> </template> {% endblock %}`,{Component:H}=Shopware;H.override("heptacom-admin-open-auth-client-edit-page",{template:I,data(){return{selectedMappingTemplate:null,availableProperties:["firstName","lastName","email","timezone","locale"],attributeMappingTemplates:{friendlyNames:{firstName:"givenName",lastName:"surName",email:"emailAddress"},x500:{firstName:"urn:oid:2.5.4.42",lastName:"urn:oid:2.5.4.4",email:"urn:oid:1.2.840.113549.1.9.1"},entraId:{firstName:"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",lastName:"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",email:"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"}}}},watch:{item(t){t&&t.provider==="saml2"&&(t.config.attributeMapping||(t.config.attributeMapping={}))}},methods:{onApplyMappingTemplate(t){const e=this.attributeMappingTemplates[t];this.item.config.attributeMapping=Object.assign(this.item.config.attributeMapping,e)}}});const{Application:v,Component:r}=Shopware;r.register("heptacom-admin-open-auth-provider-cidaas-settings",()=>n(()=>import("./index-CMiqHuuh.js"),[]));r.register("heptacom-admin-open-auth-provider-google-cloud-settings",()=>n(()=>import("./index-DrDJpjjd.js"),[]));r.register("heptacom-admin-open-auth-provider-jira-settings",()=>n(()=>import("./index-BdrZImDx.js"),[]));r.register("heptacom-admin-open-auth-provider-jumpcloud-settings",()=>n(()=>import("./index-Sm9QGQia.js"),[]));r.register("heptacom-admin-open-auth-provider-keycloak-settings",()=>n(()=>import("./index-DCd2vZo3.js"),[]));r.register("heptacom-admin-open-auth-provider-microsoft-entra-id-oidc-settings",()=>n(()=>import("./index-Cy7qwUxs.js"),[]));v.addServiceProviderDecorator("heptacomOauthRuleDataProvider",S);r.register("heptacom-admin-open-auth-provider-okta-settings",()=>n(()=>import("./index-CpdFmOBa.js"),[]));r.register("heptacom-admin-open-auth-provider-onelogin-settings",()=>n(()=>import("./index-B0TqJXkg.js"),[]));r.extend("heptacom-admin-open-auth-condition-authenticated-request","sw-condition-base",()=>n(()=>import("./index-Dg6yaIJ9.js"),__vite__mapDeps([10,11])));r.extend("heptacom-admin-open-auth-condition-jmes-path","sw-condition-base",()=>n(()=>import("./index-BbuLKrJn.js"),__vite__mapDeps([12,13])));r.register("heptacom-admin-open-auth-provider-open-id-connect-settings",()=>n(()=>import("./index-zVwbqgM2.js"),[]));v.addServiceProviderDecorator("heptacomOauthRuleDataProvider",$);r.register("heptacom-admin-open-auth-provider-saml2-settings",()=>n(()=>import("./index-CJ2sgnME.js"),[]));v.addServiceProviderDecorator("heptacomOauthRuleDataProvider",D);const{Classes:B}=Shopware,{ApiService:h}=B;class F extends h{constructor(e,i,o="heptacom_admin_open_auth_provider"){super(e,i,o)}list(){const e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/list`,{headers:e}).then(i=>h.handleResponse(i))}factorize(e){const i=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/factorize`,{provider_key:e},{headers:i}).then(o=>h.handleResponse(o))}getRedirectUri(e){const i=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/client-redirect-url`,{client_id:e},{headers:i}).then(o=>h.handleResponse(o))}getMetadataUri(e){const i=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/client-metadata-url`,{client_id:e},{headers:i}).then(o=>h.handleResponse(o))}}const{Classes:N}=Shopware,{ApiService:f}=N;class V extends f{constructor(e,i,o="heptacom_admin_open_auth_rule_actions"){super(e,i,o)}list(){const e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/list`,{headers:e}).then(i=>f.handleResponse(i))}}class j{constructor(){this.$store={},this.operators={lowerThanEquals:{identifier:"<=",label:"global.sw-condition.operator.lowerThanEquals"},equals:{identifier:"=",label:"global.sw-condition.operator.equals"},greaterThanEquals:{identifier:">=",label:"global.sw-condition.operator.greaterThanEquals"},notEquals:{identifier:"!=",label:"global.sw-condition.operator.notEquals"},greaterThan:{identifier:">",label:"global.sw-condition.operator.greaterThan"},lowerThan:{identifier:"<",label:"global.sw-condition.operator.lowerThan"},isOneOf:{identifier:"=",label:"global.sw-condition.operator.isOneOf"},isNoneOf:{identifier:"!=",label:"global.sw-condition.operator.isNoneOf"},gross:{identifier:!1,label:"global.sw-condition.operator.gross"},net:{identifier:!0,label:"global.sw-condition.operator.net"},empty:{identifier:"empty",label:"global.sw-condition.operator.empty"}},this.operatorSets={defaultSet:[this.operators.equals,this.operators.notEquals,this.operators.greaterThanEquals,this.operators.lowerThanEquals],singleStore:[this.operators.equals,this.operators.notEquals],multiStore:[this.operators.isOneOf,this.operators.isNoneOf],string:[this.operators.equals,this.operators.notEquals],bool:[this.operators.equals],number:[this.operators.equals,this.operators.greaterThan,this.operators.greaterThanEquals,this.operators.lowerThan,this.operators.lowerThanEquals,this.operators.notEquals],date:[this.operators.equals,this.operators.greaterThan,this.operators.greaterThanEquals,this.operators.lowerThan,this.operators.lowerThanEquals,this.operators.notEquals],isNet:[this.operators.gross,this.operators.net],empty:[this.operators.empty],zipCode:[this.operators.greaterThan,this.operators.greaterThanEquals,this.operators.lowerThan,this.operators.lowerThanEquals]},this.groups={general:{id:"general",name:"sw-settings-rule.detail.groups.general"},user:{id:"user",name:"heptacom-admin-open-auth.condition.group.user"}}}getByType(e){if(!e)return this.getByType("placeholder");if(e==="scriptRule"){const i=this.getConditions().filter(o=>o.type==="scriptRule").shift();if(i)return i}return this.$store[e]}getOperatorSet(e){return this.operatorSets[e]}addEmptyOperatorToOperatorSet(e){return e.concat(this.operatorSets.empty)}getOperatorSetByComponent(e){const i=e.config.componentName,o=e.type;return i==="sw-single-select"?this.operatorSets.singleStore:i==="sw-multi-select"?this.operatorSets.multiStore:o==="bool"?this.operatorSets.bool:o==="text"?this.operatorSets.string:o==="int"?this.operatorSets.number:this.operatorSets.defaultSet}getOperatorOptionsByIdentifiers(e,i=!1){return e.map(o=>{const s=Object.entries(this.operators).find(([m,a])=>i&&["equals","notEquals"].includes(m)||!i&&["isOneOf","isNoneOf"].includes(m)?!1:o===a.identifier);return s?s.pop():{identifier:o,label:`global.sw-condition.operator.${o}`}})}getByGroup(e){const i=Object.values(this.$store),o=[];return i.forEach(s=>{s.group===e&&o.push(s)}),o}getGroups(){return this.groups}upsertGroup(e,i){this.groups[e]={...this.groups[e],...i}}removeGroup(e){delete this.groups[e]}addCondition(e,i){i.type=e,this.$store[i.scriptId??e]=i}getConditions(e=null){let i=Object.values(this.$store);return e!==null&&(i=i.filter(o=>e.some(s=>o.scopes.indexOf(s)!==-1))),i}getComponentByCondition(e){if(this.isAndContainer(e))return"sw-condition-and-container";if(this.isOrContainer(e))return"sw-condition-or-container";if(this.isAllLineItemsContainer(e))return"sw-condition-all-line-items-container";if(!e.type)return"sw-condition-base";const i=this.getByType(e.type);return typeof i>"u"||!i.component?"sw-condition-not-found":i.component}getAndContainerData(){return{type:"andContainer",value:{}}}isAndContainer(e){return e.type==="andContainer"}getOrContainerData(){return{type:"orContainer",value:{}}}isOrContainer(e){return e.type==="orContainer"}getPlaceholderData(){return{type:null,value:{}}}isAllLineItemsContainer(e){return e.type==="allLineItemsContainer"}}const K=t=>(t.addCondition("alwaysValid",{component:"sw-condition-is-always-valid",label:"global.sw-condition.condition.alwaysValidRule",scopes:["global"],group:"general"}),t.addCondition("dateRange",{component:"sw-condition-date-range",label:"global.sw-condition.condition.dateRangeRule.label",scopes:["global"],group:"general"}),t.addCondition("timeRange",{component:"sw-condition-time-range",label:"global.sw-condition.condition.timeRangeRule",scopes:["global"],group:"general"}),t.addCondition("heptacomAdminOpenAuthEmail",{component:"sw-condition-generic",label:"heptacom-admin-open-auth.condition.rule.email",scopes:["global"],group:"user"}),t.addCondition("heptacomAdminOpenAuthTimeZone",{component:"sw-condition-generic",label:"heptacom-admin-open-auth.condition.rule.timeZone",scopes:["jira","jumpcloud","keycloak","okta","open_id_connect","saml2"],group:"user"}),t.addCondition("heptacomAdminOpenAuthLocale",{component:"sw-condition-generic",label:"heptacom-admin-open-auth.condition.rule.locale",scopes:["google_cloud","jumpcloud","keycloak","okta","onelogin","open_id_connect","saml2"],group:"user"}),t.addCondition("heptacomAdminOpenAuthPrimaryKey",{component:"sw-condition-generic",label:"heptacom-admin-open-auth.condition.rule.primaryKey",scopes:["global"],group:"user"}),t),{Application:g}=Shopware;g.addServiceProvider("HeptacomAdminOpenAuthProviderApiService",t=>{const e=g.getContainer("init");return new F(e.httpClient,t.loginService)}).addServiceProvider("HeptacomAdminOpenAuthRuleActionsApiService",t=>{const e=g.getContainer("init");return new V(e.httpClient,t.loginService)}).addServiceProvider("heptacomOauthRuleDataProvider",()=>new j).addServiceProviderDecorator("heptacomOauthRuleDataProvider",K);
//# sourceMappingURL=ksk-heptacom-admin-open-auth-BsUeUlde.js.map
